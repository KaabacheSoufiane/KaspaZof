#!/bin/bash

# Script d'audit de s√©curit√© automatis√©
set -e

echo "üîç Audit de s√©curit√© KaspaZof..."

# Cr√©er environnement temporaire
TEMP_ENV="security_audit_$(date +%s)"
python3 -m venv "$TEMP_ENV"

# Fonction de nettoyage
cleanup() {
    echo "üßπ Nettoyage..."
    rm -rf "$TEMP_ENV"
}
trap cleanup EXIT

# Installer pip-audit
"$TEMP_ENV/bin/pip" install pip-audit > /dev/null 2>&1

echo "üì¶ Audit des d√©pendances Python..."
if "$TEMP_ENV/bin/pip-audit" --requirement backend/requirements.txt --format json > security_report.json; then
    echo "‚úÖ Aucune vuln√©rabilit√© critique d√©tect√©e"
    PYTHON_SECURE=true
else
    echo "‚ö†Ô∏è  Vuln√©rabilit√©s d√©tect√©es - voir security_report.json"
    PYTHON_SECURE=false
fi

# Audit frontend si package.json existe
if [ -f "package.json" ]; then
    echo "üì¶ Audit des d√©pendances Node.js..."
    if command -v npm &> /dev/null; then
        if npm audit --audit-level=high > npm_audit.json 2>&1; then
            echo "‚úÖ Frontend s√©curis√©"
            NODE_SECURE=true
        else
            echo "‚ö†Ô∏è  Vuln√©rabilit√©s frontend d√©tect√©es"
            NODE_SECURE=false
        fi
    else
        echo "‚ö†Ô∏è  npm non disponible - audit frontend ignor√©"
        NODE_SECURE=true
    fi
else
    NODE_SECURE=true
fi

# V√©rifier les secrets
echo "üîê V√©rification des secrets..."
if [ -f ".env" ]; then
    echo "‚ö†Ô∏è  Fichier .env pr√©sent - v√©rifier qu'il n'est pas committ√©"
    if git ls-files --error-unmatch .env 2>/dev/null; then
        echo "‚ùå CRITIQUE: .env est track√© par Git!"
        SECRETS_SECURE=false
    else
        echo "‚úÖ .env non track√©"
        SECRETS_SECURE=true
    fi
else
    echo "‚úÖ Pas de .env en racine"
    SECRETS_SECURE=true
fi

# Rapport final
echo ""
echo "üìä Rapport de s√©curit√©:"
echo "   Python Backend: $([ "$PYTHON_SECURE" = true ] && echo "‚úÖ S√©curis√©" || echo "‚ùå Vuln√©rable")"
echo "   Frontend Node:  $([ "$NODE_SECURE" = true ] && echo "‚úÖ S√©curis√©" || echo "‚ùå Vuln√©rable")"
echo "   Gestion secrets: $([ "$SECRETS_SECURE" = true ] && echo "‚úÖ S√©curis√©" || echo "‚ùå Vuln√©rable")"

# Code de sortie
if [ "$PYTHON_SECURE" = true ] && [ "$NODE_SECURE" = true ] && [ "$SECRETS_SECURE" = true ]; then
    echo ""
    echo "üéâ Audit de s√©curit√© r√©ussi!"
    exit 0
else
    echo ""
    echo "üö® Probl√®mes de s√©curit√© d√©tect√©s - voir les rapports ci-dessus"
    exit 1
fi